{"version":3,"sources":["App/Container/index.js","App/Header/index.js","App/Main/index.js","App/Clock/index.js","App/Form/Answer/index.js","App/Form/index.js","App/Table/index.js","App/Footer/index.js","App/currencies.js","App/index.js","serviceWorker.js","index.js"],"names":["Container","children","className","Header","alt","src","Main","Clock","date","toLocaleString","weekday","month","day","year","hour","minute","second","Answer","answerValue","resultSymbol","Form","currencies","useState","buy","setBuy","amount","setAmount","symbol","currencySelected","setCurrencySelected","setAnswerValue","currencyToUse","find","calculateResult","Number","buyprice","toFixed","sellprice","onSubmit","event","preventDefault","type","name","required","checked","onChange","value","target","map","currency","key","min","Table","Footer","id","App","Date","setDate","useEffect","intervalId","setInterval","clearInterval","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.172bef7a.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./style.css\"\r\n\r\n\r\nconst Container = ({children}) => \r\n    <div className=\"container\">\r\n        {children}\r\n    </div>\r\n\r\n\r\nexport default Container","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__text\">Kantor wymiany walut</h1>\r\n        <img className=\"header__logo\" alt=\"logo\" src=\"https://cdn.onlinewebfonts.com/svg/img_353628.png\" />\r\n      </header>\r\n)\r\n\r\nexport default Header","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nconst Main = ({children}) =>\r\n<main className=\"main\">\r\n    {children}\r\n</main>\r\n\r\nexport default Main","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nconst Clock = ({ date }) => (\r\n    <section className=\"clock\">\r\n        Dzisiaj jest {date.toLocaleString(\"pl\",\r\n            { weekday: \"long\", month: \"long\", day: \"numeric\", year: \"numeric\", hour: \"numeric\", minute: \"numeric\", second: \"numeric\" })}\r\n    </section>\r\n)\r\n\r\nexport default Clock","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\n\r\nconst Answer = ({ answerValue, resultSymbol }) =>\r\n    !!answerValue &&\r\n    <p className=\"answer\">\r\n        Na rachunek powiązany z Twoim kontem zostało przelane\r\n         <p>\r\n            {answerValue}&nbsp;{resultSymbol}\r\n        </p>\r\n    </p>\r\n\r\n\r\n\r\n\r\nexport default Answer","import React, { useState } from \"react\"\r\nimport Answer from \"./Answer\"\r\nimport \"./style.css\"\r\n\r\nconst Form = ({ currencies }) => {\r\n    const [buy, setBuy] = useState(true)\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [currencySelected, setCurrencySelected] = useState(currencies[0].symbol)\r\n    const [answerValue, setAnswerValue] = useState(\"\")\r\n\r\n    const currencyToUse = currencies.find(({symbol}) => symbol === currencySelected)\r\n\r\n    const resultSymbol = buy ? currencyToUse.symbol : \"PLN\"\r\n    \r\n\r\n\r\n    const onBuyChange = () =>\r\n        setBuy(true);\r\n\r\n    const onSellChange = () =>\r\n        setBuy(false)\r\n\r\n    const calculateResult = () => {\r\n        if (buy) {\r\n            return (Number(amount) / currencyToUse.buyprice).toFixed(2)\r\n        }\r\n        return (Number(amount) * currencyToUse.sellprice).toFixed(2)\r\n    }\r\n\r\n    const onFormSubmit = () =>\r\n        setAnswerValue(calculateResult())\r\n\r\n\r\n    return (\r\n        <form className=\"form\"\r\n            onSubmit={(event) => {\r\n                event.preventDefault();\r\n                onFormSubmit()\r\n            }\r\n            }>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Co chcesz zrobić?</legend>\r\n                <div className=\"form__flexbox\">\r\n                    <ul className=\"form__inputList\">\r\n\r\n                        <li>\r\n                            <label>\r\n                                <input type=\"radio\"\r\n                                    name=\"what-you-gona-do\"\r\n                                    required\r\n                                    checked={buy}\r\n                                    onChange={() => {\r\n                                        onBuyChange();\r\n                                        setAnswerValue(\"\");\r\n                                    }}\r\n                                />\r\n                                <span className=\"form__discription\">Kupuję</span>\r\n                            </label>\r\n                        </li>\r\n                        <li>\r\n                            <label>\r\n                                <input type=\"radio\"\r\n                                    name=\"what-you-gona-do\"\r\n                                    checked={!buy}\r\n                                    onChange={() => {\r\n                                        onSellChange()\r\n                                        setAnswerValue(\"\");\r\n                                    }}\r\n                                    required />\r\n                                <span className=\"form__discription\">Sprzedaję</span>\r\n                            </label>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"form__inputContainer\">\r\n                        <label>\r\n                            <span className=\"form__discription\">\r\n                                Wybierz walutę\r\n                            </span>\r\n                            <select className=\"form__input\"\r\n                                required\r\n                                name=\"currency\"\r\n                                value={currencySelected}\r\n                                onChange={({ target }) => {\r\n                                    setCurrencySelected(target.value);\r\n                                    setAnswerValue(\"\");\r\n                                }}>\r\n                                {currencies.map(currency =>\r\n                                    <option\r\n                                        value={currency.symbol}\r\n                                        key={currency.symbol}\r\n                                        >\r\n                                        {currency.name}\r\n                                    </option>\r\n                                )}\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form__inputContainer\">\r\n                        <label>\r\n                            <span className=\"form__discription\">\r\n                                Chcę wymienić <strong>({buy ? \"PLN\" : currencyToUse.symbol})</strong>\r\n                            </span>\r\n                            <input className=\"form__input\"\r\n                                name=\"to-exchange\"\r\n                                required\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                value={amount}\r\n                                onChange={({ target }) => {\r\n                                    setAmount(target.value);\r\n                                    setAnswerValue(\"\");\r\n                                }}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <div className=\"form__text\">\r\n                <p>\r\n                    Otrzymasz\r\n                    </p>\r\n                <p className=\"form__paragraph\">\r\n                    {calculateResult()} ({resultSymbol})\r\n\r\n                    </p>\r\n            </div>\r\n            <button className=\"form__button\">Wymień</button>\r\n            <Answer answerValue={answerValue} resultSymbol={resultSymbol} />\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nexport default Form","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nconst Table = ({ currencies }) => (\r\n    <section className=\"table\">\r\n        <table className=\"table__container\">\r\n            <caption className=\"table__caption\">\r\n                Tabela kursów walut\r\n                </caption>\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"table__header table__cell\">Waluta</th>\r\n                    <th className=\"table__header table__cell\">Kupno</th>\r\n                    <th className=\"table__header table__cell\">Sprzedaż</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"\">\r\n                {currencies.map(currency =>\r\n                    <tr key={currency.name}>\r\n                        <th className=\"table__header table__cell\">{currency.name}</th>\r\n                        <td className=\"table__cell\">{currency.buyprice}</td>\r\n                        <td className=\"table__cell\">{currency.sellprice}</td>\r\n                    </tr>\r\n\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    </section>\r\n)\r\n\r\nexport default Table","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\n\r\nconst Footer = () => \r\n<footer className=\"footer\">\r\n<p className=\"footer__text\">\r\n  Nie jesteśmy prawdziwym kantorem. ale i tak możesz przesłać nam pieniądze. Gwarantujemy. że ich nie\r\n  odzyskasz!\r\n</p>\r\n</footer>\r\n\r\nexport default Footer","export const currencies = [\r\n    {\r\n        id: 0,\r\n        name: \"dolar amerykański\",\r\n        symbol: \"USD\",\r\n        buyprice: 3.9384,\r\n        sellprice: 4.0180\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"euro\",\r\n        symbol: \"EUR\",\r\n        buyprice: 4.4189,\r\n        sellprice: 4.5081\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"funt brytyjski\",\r\n        symbol: \"GPB\",\r\n        buyprice: 4.9386,\r\n        sellprice: 5.0384\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"frank szwajcarski\",\r\n        symbol: \"CHF\",\r\n        buyprice: 4.1437,\r\n        sellprice: 4.2275\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"korona norweska\",\r\n        symbol: \"NOK\",\r\n        buyprice: 0.4113,\r\n        sellprice: 0.4197\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"korona czeska\",\r\n        symbol: \"CZK\",\r\n        buyprice: 0.1660,\r\n        sellprice: 0.1694\r\n    },\r\n];\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Container from \"./Container\"\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Clock from \"./Clock\"\r\nimport Form from \"./Form\";\r\nimport Table from \"./Table\";\r\nimport Footer from \"./Footer\";\r\nimport { currencies } from './currencies.js'\r\n \r\n\r\n\r\n\r\nfunction App() {\r\n\r\nconst [date, setDate] = useState(new Date())\r\n\r\nuseEffect(() => {\r\n  const intervalId=  setInterval(() => {setDate(date => new Date())},  1000);\r\n  return  () => {\r\n    clearInterval(intervalId)\r\n  }\r\n}, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Main>\r\n        <Clock date={date}/>\r\n        <Form currencies={currencies} />\r\n        <Table currencies={currencies} />\r\n      </Main>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}