{"version":3,"sources":["App/image/money_banknotes_currency_forex_us_dollars_euro_baht_peso-551241.jpg","App/Container/styled.js","App/Container/index.js","App/Header/styled.js","App/Header/index.js","App/Main/styled.js","App/Main/Failed/styled.js","App/Main/Failed/index.js","App/Main/Loading/styled.js","App/Main/Loading/index.js","App/Main/index.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentDate.js","App/useCurrency.js","App/Form/Answer/styled.js","App/Form/Answer/index.js","App/Form/styled.js","App/Form/index.js","App/Form/useSelected.js","App/Table/styled.js","App/Table/index.js","App/Footer/styled.js","App/Footer/index.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","StyledContainer","styled","div","img","Container","children","StyledHeader","header","Text","h1","Logo","Header","alt","src","StyledMain","main","StyledFailed","section","p","Failed","currencies","failed","StyledLoading","Loading","loading","Main","StyledClock","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","weekday","month","day","year","hour","minute","second","dateFormat","useCurrency","rates","ratesData","setRatesData","downloadRates","a","fetch","response","ok","Error","json","data","effectiveDate","setTimeout","StyledAnswer","Answer","answerValue","resultCode","StyledFieldset","Flexbox","InputList","ul","InputContainer","Discription","span","inline","css","StyledInput","input","Paragraph","Button","button","Form","buy","setBuy","amount","setAmount","setAnswerValue","currencySelected","setCurrencySelected","currency","code","ask","bid","currencyToUse","setCurrencyToUse","length","find","useSelected","calculateResult","Number","toFixed","onSubmit","event","preventDefault","type","name","required","checked","onChange","as","value","target","map","key","min","StyledTable","table","Caption","caption","Cell","td","Table","StyledFooter","footer","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df533099.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/money_banknotes_currency_forex_us_dollars_euro_baht_peso-551241.dcdf8117.jpg\";","import styled from \"styled-components\"\r\nimport img from \"../image/money_banknotes_currency_forex_us_dollars_euro_baht_peso-551241.jpg\"\r\n\r\nexport const StyledContainer = styled.div`\r\n    background-image: url(${img});\r\n    background-size: cover;\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n&::after{\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: rgba(240, 255, 255, 0.548);\r\n    z-index: -1;\r\n}\r\n`","import React from \"react\"\r\nimport { StyledContainer } from \"./styled\"\r\n\r\n\r\nconst Container = ({ children }) =>\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n\r\nexport default Container","import styled from \"styled-components\"\r\n\r\nexport const StyledHeader = styled.header`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    padding: 20px;\r\n    background-color: var(--colorPrime);\r\n`\r\n\r\nexport const Text = styled.h1` \r\n    text-transform: uppercase;\r\n    font-size: 20px;\r\n`\r\n\r\nexport const Logo = styled.img`\r\n    height: 100px;\r\n`","import React from \"react\"\r\nimport { StyledHeader, Text, Logo } from \"./styled\"\r\n\r\n\r\nconst Header = () => (\r\n  <StyledHeader>\r\n    <Text>\r\n      Kantor wymiany walut\r\n    </Text>\r\n    <Logo\r\n      alt=\"logo\"\r\n      src=\"https://cdn.onlinewebfonts.com/svg/img_353628.png\"\r\n    />\r\n  </StyledHeader>\r\n)\r\n\r\nexport default Header","import styled from \"styled-components\"\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    background: white;\r\n    padding: 30px;\r\n    min-height: 80vh;\r\n`","import styled from \"styled-components\"\r\n\r\nexport const StyledFailed = styled.section`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n   height: 65vh;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    color: red;\r\n    font-weight: bold;\r\n    font-size: 25px;\r\n    width: 75%;\r\n    text-align: center;\r\n    @media (max-width: 767px) {\r\n        width: 90%;\r\n        font-size: 20px;\r\n    }\r\n`","import React from \"react\"\r\nimport {\r\n    StyledFailed,\r\n    Text\r\n} from \"./styled\"\r\n\r\nconst Failed = ({ currencies }) => {\r\n    return currencies.failed && (\r\n        <StyledFailed>\r\n            <Text>\r\n                Ups, coś poszło nie tak. Sprawdź połączenie z internetem. Jeżeli wszystko jest w porządku, problem leży po naszej stronie.<br />\r\n            Pracujemy nad rozwiązaniem, przepraszamy za niedogodności.\r\n        </Text>\r\n        </StyledFailed>\r\n    )\r\n}\r\n\r\nexport default Failed","import styled from \"styled-components\"\r\n\r\nexport const StyledLoading = styled.section`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n   height: 65vh;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    font-weight: bold;\r\n    font-size: 25px;\r\n    width: 75%;\r\n    text-align: center;\r\n    @media (max-width: 767px) {\r\n        width: 90%;\r\n        font-size: 20px;\r\n    }\r\n`","import React from \"react\"\r\nimport {\r\n    StyledLoading,\r\n    Text\r\n} from \"./styled\"\r\n\r\nconst Loading = ({ currencies }) => {\r\n    return currencies.loading && (\r\n        <StyledLoading>\r\n            <Text>\r\n                Prosimy o chwilkę cierpliwości, pobieramy dla Ciebie najbardziej aktualne kursy z Narodowego Banku Polskiego\r\n            </Text>\r\n        </StyledLoading>\r\n    )\r\n}\r\n\r\nexport default Loading","import React from \"react\"\r\nimport { StyledMain } from \"./styled\"\r\nimport Failed from \"./Failed\"\r\nimport Loading from \"./Loading\"\r\n\r\n\r\nconst Main = ({ children, currencies }) =>\r\n    <StyledMain>\r\n        {children}\r\n        <Failed\r\n            currencies={currencies}\r\n        />\r\n        <Loading\r\n            currencies={currencies}\r\n        />\r\n    </StyledMain>\r\n\r\nexport default Main","import styled from \"styled-components\"\r\n\r\nexport const StyledClock = styled.section`\r\n    margin: 20px;\r\n    font-size: 20px;\r\n    font-family: monospace;\r\n    text-align: right;\r\n`","import React from \"react\"\r\nimport { useCurrentDate } from \"./useCurrentDate\"\r\nimport { StyledClock } from \"./styled\"\r\n\r\nconst dateFormat = (date) => date.toLocaleString(\"pl\",\r\n    {\r\n        weekday: \"long\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        second: \"numeric\"\r\n    });\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <StyledClock>\r\n            Dzisiaj jest  {dateFormat(date)}\r\n        </StyledClock>\r\n    )\r\n}\r\n\r\nexport default Clock","import { useState, useEffect } from \"react\"\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const intervalId =\r\n      setInterval(\r\n        () => { setDate(new Date()) },\r\n        1000)\r\n      ;\r\n    return () => {\r\n      clearInterval(intervalId)\r\n    }\r\n  },\r\n\r\n    []);\r\n  return date\r\n}","import { useState, useEffect } from \"react\"\r\n\r\nexport const useCurrency = () => {\r\n\r\n    const [ratesData, setRatesData] = useState({\r\n        loading: true,\r\n        date: \"\",\r\n        failed: false,\r\n        rates: []\r\n    });\r\n\r\n    const downloadRates = async (ratesData, setRatesData) => {\r\n        try {\r\n            const response = await fetch(\"http://api.nbp.pl/api/exchangerates/tables/c/\");\r\n            if (!response.ok) {\r\n                throw new Error();\r\n            }\r\n            const data = await response.json();\r\n            setRatesData({\r\n                ...ratesData,\r\n                loading: false,\r\n                date: data[0].effectiveDate,\r\n                rates: data[0].rates\r\n            });\r\n        }\r\n        catch (error) {\r\n            setRatesData({\r\n                ...ratesData,\r\n                loading: false,\r\n                failed: true\r\n            });\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            downloadRates(ratesData, setRatesData)\r\n        }, 2000)\r\n    }, []);\r\n\r\n    return ratesData\r\n};\r\n\r\n","import styled from \"styled-components\"\r\n\r\nexport const StyledAnswer = styled.p`\r\n    text-align: center;\r\n    font-size: 30px;\r\n    margin: 40px auto;\r\n    max-width: 80%;\r\n`","import React from \"react\"\r\nimport { StyledAnswer } from \"./styled\"\r\n\r\n\r\nconst Answer = ({ answerValue, resultCode }) =>\r\n    answerValue &&\r\n    <StyledAnswer>\r\n        Na rachunek powiązany z Twoim kontem zostało przelane\r\n         <p>\r\n            {answerValue}&nbsp;{resultCode}\r\n        </p>\r\n    </StyledAnswer>\r\n\r\n\r\n\r\n\r\nexport default Answer","import styled, { css } from \"styled-components\"\r\n\r\nexport const StyledFieldset = styled.div`\r\n    padding: 20px;\r\n    border: 3px solid var(--colorPrime);\r\n`\r\nexport const Flexbox = styled.div`\r\n    display: flex;\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nexport const InputList = styled.ul`\r\n    list-style: none;\r\n    flex-basis: 300px;\r\n    `\r\n\r\nexport const InputContainer = styled.div`\r\n    flex-basis: 300px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n`\r\n\r\nexport const Discription = styled.span`\r\n    display: block;\r\n    margin: 10px 10px;\r\n    \r\n    ${({ inline }) => inline && css`\r\n    display: inline-block;\r\n    `}\r\n`\r\n\r\nexport const StyledInput = styled.input`\r\n    display: inline-block;\r\n    padding: 5px;\r\n    border: 1px solid var(--colorPrime);\r\n`\r\n\r\nexport const Text = styled.div`\r\n    max-width: 400px;\r\n    padding: 10px;\r\n    border: 3px solid var(--colorPrime);\r\n    margin: 20px auto;\r\n    text-align: center;\r\n`\r\n\r\nexport const Paragraph = styled.p`\r\n    display: block;\r\n    height: 2em;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    display: block;\r\n    width: 200px;\r\n    padding: 20px;\r\n    border: 3px solid var(--colorPrime);\r\n    background-color: transparent;\r\n    margin: 20px auto;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n    background-color: var(--colorPrime);\r\n    };\r\n\r\n    &:focus {\r\n    background-color: hsl(135, 67%, 63%);\r\n    outline: none;\r\n    }\r\n`\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\"\r\nimport { useSelected } from \"./useSelected\"\r\nimport Answer from \"./Answer\"\r\nimport {\r\n    StyledFieldset,\r\n    Flexbox,\r\n    InputList,\r\n    InputContainer,\r\n    Discription,\r\n    StyledInput,\r\n    Text,\r\n    Paragraph,\r\n    Button\r\n} from \"./styled\"\r\n\r\n\r\n\r\nconst Form = ({ currencies }) => {\r\n    const [buy, setBuy] = useState(true)\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [answerValue, setAnswerValue] = useState(\"\")\r\n\r\n    const [\r\n        currencyToUse,\r\n        currencySelected,\r\n        setCurrencySelected] = useSelected()\r\n\r\n    const resultCode = buy ? currencyToUse.code : \"PLN\"\r\n\r\n    const calculateResult = () => {\r\n        if (buy) {\r\n            return (Number(amount) / currencyToUse.ask).toFixed(2)\r\n        }\r\n        return (Number(amount) * currencyToUse.bid).toFixed(2)\r\n    }\r\n\r\n    const onBuyChange = () =>\r\n        setBuy(true);\r\n    const onSellChange = () =>\r\n        setBuy(false)\r\n    const onFormSubmit = () =>\r\n        setAnswerValue(calculateResult())\r\n\r\n    return currencies.rates.length > 0 && (\r\n        <form\r\n            onSubmit={(event) => {\r\n                event.preventDefault();\r\n                onFormSubmit()\r\n            }\r\n            }\r\n        >\r\n            <StyledFieldset>\r\n                <legend\r\n                >\r\n                    Co chcesz zrobić?\r\n                </legend>\r\n                <Flexbox >\r\n                    <InputList>\r\n                        <li>\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name=\"what-you-gona-do\"\r\n                                    required\r\n                                    checked={buy}\r\n                                    onChange={() => {\r\n                                        onBuyChange();\r\n                                        setAnswerValue(\"\");\r\n                                    }}\r\n                                />\r\n                                <Discription\r\n                                    inline\r\n                                >\r\n                                    Kupuję\r\n                                </Discription>\r\n                            </label>\r\n                        </li>\r\n                        <li>\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name=\"what-you-gona-do\"\r\n                                    checked={!buy}\r\n                                    onChange={() => {\r\n                                        onSellChange()\r\n                                        setAnswerValue(\"\");\r\n                                    }}\r\n                                    required\r\n                                />\r\n                                <Discription\r\n                                    inline\r\n                                >\r\n                                    Sprzedaję\r\n                                </Discription>\r\n                            </label>\r\n                        </li>\r\n                    </InputList>\r\n                    <InputContainer>\r\n                        <label>\r\n                            <Discription>\r\n                                Wybierz walutę\r\n                            </Discription>\r\n                            <StyledInput\r\n                                as=\"select\"\r\n                                required\r\n                                name=\"currency\"\r\n                                value={currencySelected}\r\n                                onChange={({ target }) => {\r\n                                    setCurrencySelected(target.value);\r\n                                    setAnswerValue(\"\");\r\n                                }}\r\n                            >\r\n                                {currencies.rates.map(currency =>\r\n                                    <option\r\n                                        value={currency.code}\r\n                                        key={currency.code}\r\n                                    >\r\n                                        {currency.currency}\r\n                                    </option>\r\n                                )}\r\n                            </StyledInput>\r\n                        </label>\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <label>\r\n                            <Discription>\r\n                                Chcę wymienić\r\n                                <strong>\r\n                                    ({buy ? \"PLN\" : currencyToUse.code})\r\n                                </strong>\r\n                            </Discription>\r\n                            <StyledInput\r\n                                name=\"to-exchange\"\r\n                                required\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                value={amount}\r\n                                onChange={({ target }) => {\r\n                                    setAmount(target.value);\r\n                                    setAnswerValue(\"\");\r\n                                }}\r\n                            />\r\n                        </label>\r\n                    </InputContainer>\r\n                </Flexbox >\r\n            </StyledFieldset>\r\n            <Text>\r\n                <p>\r\n                    Otrzymasz\r\n                </p>\r\n                <Paragraph>\r\n                    {calculateResult()} ({resultCode})\r\n                </Paragraph>\r\n            </Text>\r\n            <Button>\r\n                Wymień\r\n            </Button>\r\n            <Answer\r\n                answerValue={answerValue}\r\n                resultCode={resultCode}\r\n            />\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nexport default Form","import { useState, useEffect } from \"react\"\r\nimport { useCurrency } from \"../useCurrency\"\r\n\r\nexport const useSelected = () => {\r\n\r\n    const currencies = useCurrency();\r\n\r\n    const [currencySelected, setCurrencySelected] = useState(\"USD\")\r\n    const [currencyToUse, setCurrencyToUse] = useState({ currency: \"\", code: \"\", ask: \"\", bid: \"\" })\r\n    useEffect(() => {\r\n        if (currencies.rates.length > 0) {\r\n            setCurrencyToUse(currencies.rates.find(({ code }) => code === currencySelected))\r\n        }\r\n\r\n    }, [currencies.rates, currencySelected]);\r\n\r\n    return [currencyToUse, currencySelected, setCurrencySelected]\r\n}","import styled, { css } from \"styled-components\"\r\n\r\nexport const StyledTable = styled.section`\r\n    max-width: 600px;\r\n    overflow-x: auto;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n`\r\n\r\nexport const Container = styled.table`\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n`\r\n\r\nexport const Caption = styled.caption`\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    text-align: right;\r\n    margin: 10px 0;\r\n`\r\n\r\nexport const Cell = styled.td`\r\n    padding: 20px;\r\n    border: 3px solid #333;\r\n    text-align: center;\r\n    ${({ header }) => header && css`\r\n        background: var(--colorPrime);\r\n        text-transform: uppercase;\r\n        font-weight: 400;\r\n    `}\r\n`","import React from \"react\"\r\nimport {\r\n    StyledTable,\r\n    Container,\r\n    Caption,\r\n    Cell\r\n} from \"./styled\"\r\n\r\nconst Table = ({ currencies }) => {\r\n    return currencies.rates.length > 0 && (\r\n\r\n        <StyledTable>\r\n            <Container>\r\n                <Caption>\r\n                    Tabela kursów walut aktualna na dzień {currencies.date}\r\n                </Caption>\r\n                <thead>\r\n                    <tr>\r\n                        <Cell\r\n                            as=\"th\"\r\n                            header\r\n                        >\r\n                            Waluta\r\n                    </Cell>\r\n                        <Cell\r\n                            as=\"th\"\r\n                            header\r\n                        >\r\n                            Kupno\r\n                    </Cell>\r\n                        <Cell\r\n                            as=\"th\"\r\n                            header\r\n                        >\r\n                            Sprzedaż\r\n                    </Cell>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currencies.rates.map(currency =>\r\n                        <tr\r\n                            key={currency.code}\r\n                        >\r\n                            <Cell\r\n                                as=\"th\"\r\n                                header\r\n                            >\r\n                                {currency.currency}\r\n                            </Cell>\r\n                            <Cell>\r\n                                {currency.ask}\r\n                            </Cell>\r\n                            <Cell\r\n                            >\r\n                                {currency.bid}\r\n                            </Cell>\r\n                        </tr>\r\n\r\n                    )}\r\n                </tbody>\r\n            </Container>\r\n        </StyledTable>\r\n    )\r\n}\r\n\r\nexport default Table","import styled from \"styled-components\"\r\n\r\nexport const StyledFooter = styled.footer`\r\n    background-color: var(--colorPrime);\r\n    width: 100%;\r\n    margin-top: 0;\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    text-align: center;\r\n    font-weight: bold;\r\n`\r\n","import React from \"react\"\r\nimport {\r\n  StyledFooter,\r\n  Text\r\n} from \"./styled\"\r\n\r\n\r\nconst Footer = () => (\r\n  <StyledFooter >\r\n    <Text>\r\n      Nie jesteśmy prawdziwym kantorem, ale kursy są prawdziwe i pobrane z NBP API\r\n    </Text>\r\n  </StyledFooter>\r\n)\r\n\r\nexport default Footer","import React from 'react';\r\nimport Container from \"./Container\"\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Clock from \"./Clock\"\r\nimport Form from \"./Form\";\r\nimport Table from \"./Table\";\r\nimport Footer from \"./Footer\";\r\nimport { useCurrency } from \"./useCurrency\"\r\n\r\n\r\nfunction App() {\r\n\r\n  const currencies = useCurrency()\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Main currencies={currencies}>\r\n        <Clock />\r\n        <Form\r\n          currencies={currencies}\r\n        />\r\n        <Table\r\n          currencies={currencies}\r\n        />\r\n      </Main>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}